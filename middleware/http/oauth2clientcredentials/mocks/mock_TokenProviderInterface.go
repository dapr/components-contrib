// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dapr/components-contrib/middleware/http/oauth2clientcredentials (interfaces: TokenProviderInterface)

// Package mock_oauth2clientcredentials is a generated GoMock package.
package mock_oauth2clientcredentials

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	oauth2 "golang.org/x/oauth2"
	clientcredentials "golang.org/x/oauth2/clientcredentials"
)

// MockTokenProviderInterface is a mock of TokenProviderInterface interface
type MockTokenProviderInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTokenProviderInterfaceMockRecorder
}

// MockTokenProviderInterfaceMockRecorder is the mock recorder for MockTokenProviderInterface
type MockTokenProviderInterfaceMockRecorder struct {
	mock *MockTokenProviderInterface
}

// NewMockTokenProviderInterface creates a new mock instance
func NewMockTokenProviderInterface(ctrl *gomock.Controller) *MockTokenProviderInterface {
	mock := &MockTokenProviderInterface{ctrl: ctrl}
	mock.recorder = &MockTokenProviderInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTokenProviderInterface) EXPECT() *MockTokenProviderInterfaceMockRecorder {
	return m.recorder
}

// GetToken mocks base method
func (m *MockTokenProviderInterface) GetToken(arg0 *clientcredentials.Config) (*oauth2.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken", arg0)
	ret0, _ := ret[0].(*oauth2.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetToken indicates an expected call of GetToken
func (mr *MockTokenProviderInterfaceMockRecorder) GetToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockTokenProviderInterface)(nil).GetToken), arg0)
}

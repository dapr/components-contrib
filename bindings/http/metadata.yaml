# yaml-language-server: $schema=../../component-metadata-schema.json
schemaVersion: v1
type: bindings
name: http
version: v1
status: stable
title: "HTTP"
urls:
  - title: Reference
    url: https://docs.dapr.io/reference/components-reference/supported-bindings/http/
binding:
  output: true
  input: false
  operations:
    - name: create
      description: "Alias for \"post\", for backwards-compatibility"
    - name: get
      description: "Read data/records"
    - name: head
      description: "Identical to get except that the server does not return a response body"
    - name: post
      description: "Typically used to create records or send commands"
    - name: put
      description: "Update data/records"
    - name: patch
      description: "Sometimes used to update a subset of fields of a record"
    - name: delete
      description: "Delete data/record"
    - name: options
      description: "Requests for information about the communication options available (not commonly used)"
    - name: trace
      description: "Used to invoke a remote, application-layer loop-back of the request message (not commonly used)"
capabilities: []
metadata:
  - name: url
    type: string
    required: true
    description: "The base URL of the HTTP endpoint to invoke"
    example: "http://host:port/path"
  - name: responseTimeout
    type: duration
    required: false
    description: "The duration after which HTTP requests should be canceled."
    example: "10s"
  - name: maxResponseBodySize
    required: false
    description: "Max amount of data to read from the response body, as a resource quantity. A value <= 0 means no limit."
    default: "100Mi"
    example: "100Mi"
  - name: MTLSRootCA
    type: string
    required: false
    sensitive: true
    description: "CA certificate: either a PEM-encoded string, or a path to a certificate on disk"
    example: "/path/to/ca.pem"
  - name: MTLSClientCert
    type: string
    required: false
    sensitive: true
    description: "Client certificate for mTLS: either a PEM-encoded string, or a path to a certificate on disk"
    example: "/path/to/client.pem"
  - name: MTLSClientKey
    required: false
    sensitive: true
    description: "Client key for mTLS: either a PEM-encoded string, or a path to a certificate on disk"
    example: "/path/to/client.key"
  - name: MTLSRenegotiation
    type: string
    required: false
    description: "Set TLS renegotiation setting"
    allowedValues:
      - "RenegotiateNever"
      - "RenegotiateOnceAsClient"
      - "RenegotiateFreelyAsClient"
    example: "RenegotiateOnceAsClient"
  - name: securityToken
    type: string
    required: false
    sensitive: true
    description: "The security token to include on an outgoing HTTP request as a header"
    example: "this-value-is-preferably-injected-from-a-secret-store"
  - name: securityTokenHeader
    type: string
    required: false
    description: "The header name on an outgoing HTTP request for a security token"
    example: "X-Security-Token"
  - name: errorIfNot2XX
    type: bool
    required: false
    default: "true"
    description: "Create an error if a non-2XX status code is returned"
    example: "true"

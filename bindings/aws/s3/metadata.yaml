# yaml-language-server: $schema=../../../component-metadata-schema.json
schemaVersion: v1
type: bindings
name: aws.s3
version: v1
status: stable
title: "AWS S3"
urls:
  - title: Reference
    url: https://docs.dapr.io/reference/components-reference/supported-bindings/s3/
binding:
  output: true
  operations:
    - name: create
      description: "Create blob"
    - name: get
      description: "Get blob"
    - name: delete
      description: "Delete blob"
    - name: list
      description: "List blob"
capabilities: []
builtinAuthenticationProfiles:
  - name: "aws"
metadata:
  - name: bucket
    required: true
    description: |
      The name of the S3 bucket to write to.
    example: "mybucket"
    type: string
  - name: region
    required: true
    description: |
      The specific AWS region.
    example: "us-east-1"
    type: string
  - name: endpoint
    required: false
    description: |
      AWS endpoint for the component to use, to connect to S3-compatible services or emulators.
      Do not use this when running against production AWS.
    example: "s3.us-west-2.amazonaws.com"
    type: string
  - name: accessKey
    type: string
    required: true
    sensitive: true
    description: |
      The AWS access key to access the S3 bucket. Required unless using IAM roles on EKS.
    example: "AKIAIOSFODNN7EXAMPLE"
  - name: secretKey
    type: string
    required: true
    sensitive: true
    description: |
      The AWS secret key to access the S3 bucket. Required unless using IAM roles on EKS.
    example: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
  - name: sessionToken
    type: string
    required: false
    sensitive: true
    description: |
      The AWS session token to use for temporary credentials.
    example: "AQoDYXdzEJr..."
  - name: forcePathStyle
    description: |
      Currently Amazon S3 SDK supports virtual-hosted-style and path-style access.
      When false (the default), uses virtual-hosted-style format, i.e.: `https://<your bucket>.<endpoint>/<key>`. 
      When true, uses path-style format, i.e.: `https://<endpoint>/<your bucket>/<key>`.
    type: bool
    default: "false"
    example: "true"
  - name: decodeBase64
    description: |
      Configuration to decode base64 file content before saving to bucket storage.
      (In case of saving a file with binary content).
      "true" is the only allowed positive value. Other positive variations like "True", "1" are not acceptable.
    type: bool
    default: "false"
    example: "true"
  - name: encodeBase64
    description: |
      Configuration to encode base64 file content before returning the content.
      (In case of opening a file with binary content).
      "true" is the only allowed positive value. Other positive variations like "True", "1" are not acceptable.
    type: bool
    default: "false"
    example: "true"
  - name: disableSSL
    description: |
      Allows to connect to non-`https://` endpoints. 
    type: bool
    default: "false"
    example: "true"
  - name: insecureSSL
    description: |
      When connecting to `https://` endpoints, accepts self-signed or invalid certificates.
    type: bool
    default: "false"
    example: "true"
  - name: storageClass
    description: |
      The desired storage class for objects during the create operation.
      Valid AWS storage class types can be found at https://aws.amazon.com/s3/storage-classes/
    type: string
    example: "STANDARD_IA"
  - name: filePath
    description: |
      The path to a local file to upload. This is used when the data field is not provided.
    type: string
    example: "/path/to/file.txt"
